Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2022-12-05T20:12:50+00:00

====== APT Package Preparation Using git-buildrecipe ======
Updated Saturday 12 August 2023

===== Initial Setup =====
1. Create repos for the Debian packaging
2. If upstream does not have gitignore etc
	a. Copy the files in.
	b. Replace .git/info/exclude with a file similar to [[./exclude|this]]
3. git remote add for all remotes
4. git pushes
5. main branch is Debian latest
6. Other branches should be main-XX and tip-YY

===== Packaging Amendments =====
1. Make any packaging amendments
2. git commit each of them
3. Create the changelog entry
	a. gbp dch --ignore-branch (which does a dch -i)
		1. Need to edit the version number? A new upstream release?
		2. Need to add a line eg Merge new upstream release?
	b. dch -r (for the release
	c. git commit (using v1.2.3+11+u1 format)
4. git tag (using v1.2.3+11+u1 format)
5. Push, tags as well, at least to Launchpad

===== git-buildrecipe =====
1. Create a directory in gbr
2. In that create a work directory
3. Create a recipe file like [[./lp.tip.bullseye.recipe|this,]] or [[./lp.tip.bookworm.recipe|this]]
4. Run the recipe
	a. gbr.sh lp.tip.bullseye.recipe
5. Test build it (Debian, native)
	a. As a native package the package build will use the merged git repos provided by gbr.sh.
	b. Now build the .dsc etc files.
		1. If your development environment has all the package dependencies installed:-
			1. For unsigned files, ignoring VCS files (-i), not signing source package (-us), not signing changes file (-uc) and source package only (-S).
				a. debuild -i -us -uc -S
			2. For a signed source package (-S) ignoring VCS files (-i):
				a. debuild -i -S
		2. If not all project dependencies are installed in your dev environment (-d):-
			1. debuild -d -i -S
	c. pbuilder
6. Test build it (Ubuntu, quilt)
	a. As a non-native build the build will look for an upstream tarball in the parent directory. If not available it will build one using pristine-tar. It is this tarball and NOT the upstream git repo which will be used.
	b. Now build the .dsc etc files.
		1. If your development environment has all the package dependencies installed:-
			1. For unsigned files, ignoring VCS files (-i), not signing source package (-us), not signing changes file (-uc) and source package only (-S).
				a. brz builddeb -- -i -us -uc -S
			2. For a signed source package (-S) ignoring VCS files (-i):
				a. brz builddeb -- -i -S
		2. If not all project dependencies are installed in your dev environment (-d):-
			1. brz builddeb -- -d -i -S
	c. pbuilder

===== LaunchPad =====
1. When testing complete.
2. Go to the main source project.
3. Add a recipe to the master branch
	a. Make sure it is named by release and on-demand
	b. Recipe is on-demand
	c. PPA is utils
	d. First line of recipe contents should be
		1. # git-build-recipe format 0.4 deb-version {debupstream}-1~{revtime:pkg}
	e. Make sure the recipe contents are the equivalent of previous gbr but for master and main
4. Request a build.
